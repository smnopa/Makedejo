---
import Layout from '../layouts/Layout.astro';
import Footer from '../components/Footer.astro';
import ItemCartIndex from '../components/ItemCartIndex.astro';
import Coments from '../components/Coments.astro';

---

<Layout isHomePage={false} title="Makedejo">
	<section class="relative z-0 h-[72vh]">
	  <div class="relative w-full h-full">
		<!-- Video para pantallas móviles (vertical) -->
		<video muted autoplay loop playsinline class="object-cover w-full h-full md:hidden">
		  <source src="/img/videos/videoHomePageMovile.mp4" type="video/mp4">
		  Tu navegador no soporta el video.
		</video>
  
		<!-- Video para pantallas grandes (horizontal) -->
		<video muted autoplay loop playsinline class="hidden md:block object-cover w-full h-full">
		  <source src="/img/videos/videoHomePage.mp4" type="video/mp4">
		</video>
  
		<!-- Texto superpuesto -->
		<div class="absolute inset-0 flex justify-start">
		  <!-- Tener en cuenta estos márgenes para el resto de la página -->
		  <h1 class="font-bold text-white text-3xl mt-11 ml-8 sm:text-4xl lg:text-4xl xl:text-5xl xl:ml-52 xl:mt-20">
			<span class="block xl:hidden">
			  “No es lo mismo imaginar una experiencia que vivirla”
			</span>
			<span class="hidden xl:block">
			  “No es lo mismo imaginar una<br>experiencia que vivirla”
			</span>
		  </h1>
		</div>
	  </div>
	</section>

	<!--TitleDescription-->
	<section class="py-16 px-8 text-center">
		<div class="mb-8">
			<h1 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-[#0A3A4E]">
				Bienvenidos a Makedejo, vive tu experiencia
			</h1>
		</div>
		<div class="max-w-fit xl mx-auto text-lg text-gray-500 leading-relaxed 2xl:px-44">
			<p>
				MaKedejo es una agencia de viajes dedicada a ofrecer experiencias únicas e inolvidables para los
				amantes de la aventura y la cultura. Especializada en destinos sorprendentes, nuestra misión es llevarte
				a explorar los rincones más bellos y auténticos de Colombia, conectándote con la esencia de cada lugar.
				¡Con MaKedejo, viajar se convierte en un arte!
			</p>
		</div>
	</section>
	
	 <!--Carrousel de Cartas-->

<section class="flex flex-col lg:flex-row justify-center items-center mb-9 carousel-container" data-card-width="320">
	<h1 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-[#0A3A4E] text-center lg:text-left mb-6 lg:mb-0 lg:mr-8">
	  ¿A dónde<br>quieres viajar?
	</h1>
	<div class="relative w-full max-w-4xl mx-8">
	  
	  <!-- Botón para ir a la izquierda -->
	  <button class="prev absolute top-1/2 left-0 transform -translate-y-1/2 bg-white p-3 rounded-r-lg shadow-lg text-gray-800 text-2xl">
		&#10094;
	  </button>
	  
	  <!-- Contenedor de las cartas -->
	  <div class="carousel flex overflow-hidden scroll-smooth space-x-4 w-full">
		<!-- Aquí van las cartas ItemCartIndex -->
		<div class="flex-shrink-0 w-80">
		  <ItemCartIndex />
		</div>
		<div class="flex-shrink-0 w-80">
		  <ItemCartIndex />
		</div>
		<div class="flex-shrink-0 w-80">
		  <ItemCartIndex />
		</div>
		<div class="flex-shrink-0 w-80">
		  <ItemCartIndex />
		</div>
	  </div>
  
	  <!-- Botón para ir a la derecha -->
	  <button class="next absolute top-1/2 right-0 transform -translate-y-1/2 bg-white p-3 rounded-l-lg shadow-lg text-gray-800 text-2xl">
		&#10095;
	  </button>
	</div>
  </section>

  <!-- Seccion de descuentos -->
  <section class="relative w-full max-w-6xl mx-auto py-10 bg-[#0A3A4E] carousel-container" data-card-width="640">
	<h2 class="text-white text-4xl font-bold text-center mb-8">
	  ¡Descuentos Especiales!
	</h2>
  
	<!-- Botón para ir a la izquierda -->
	<button class="prev absolute top-1/2 left-0 transform -translate-y-1/2 bg-white p-3 rounded-r-lg shadow-lg text-gray-800 text-2xl">
	  &#10094;
	</button>
  
	<!-- Contenedor del carrusel de descuentos -->
	<div class="flex overflow-hidden scroll-smooth space-x-4 w-full carousel">
	  <!-- Sección de descuento 1 -->
	  <div class="w-full flex-shrink-0 bg-white rounded-lg shadow-lg">
		<img src="img/images/imgfooter.webp" alt="Descuento 1" class="w-full h-64 object-cover rounded-t-lg">
		<div class="p-4 text-center">
		  <h3 class="text-xl font-bold text-[#0A3A4E]">¡Descuento del 20%!</h3>
		  <p class="text-lg">En pasadías solo por hoy</p>
		</div>
	  </div>
  
	  <!-- Sección de descuento 2 -->
	  <div class="w-full flex-shrink-0 bg-white rounded-lg shadow-lg">
		<img src="img/images/imgfooter.webp" alt="Descuento 2" class="w-full h-64 object-cover rounded-t-lg">
		<div class="p-4 text-center">
		  <h3 class="text-xl font-bold text-[#0A3A4E]">¡Descuento del 30%!</h3>
		  <p class="text-lg">En hoteles y resorts</p>
		</div>
	  </div>
  
	  <!-- Sección de descuento 3 -->
	  <div class="w-full flex-shrink-0 bg-white rounded-lg shadow-lg">
		<img src="img/images/imgfooter.webp" alt="Descuento 3" class="w-full h-64 object-cover rounded-t-lg">
		<div class="p-4 text-center">
		  <h3 class="text-xl font-bold text-[#0A3A4E]">¡Descuento del 50%!</h3>
		  <p class="text-lg">En tours por la ciudad</p>
		</div>
	  </div>
	</div>
  
	<!-- Botón para ir a la derecha -->
	<button class="next absolute top-1/2 right-0 transform -translate-y-1/2 bg-white p-3 rounded-l-lg shadow-lg text-gray-800 text-2xl">
	  &#10095;
	</button>
  </section>
  
  <!-- seccion de comentarios -->
  <section class="py-16 px-8">
	<div class="mb-20 text-center">
		<h1 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-[#0A3A4E]">
			Viajámos con Make!!
		</h1>
	</div>
	<div class="max-w-fit xl mx-auto text-lg text-gray-500 leading-relaxed 2xl:px-44 flex flex-col gap-5 sm:flex-row">
		<Coments /><Coments /><Coments />
	</div>
</section>
	
	<Footer />
</Layout>
<script>
	// Selecciona todos los contenedores de carrusel
	document.querySelectorAll('.carousel-container').forEach(container => {
	  const carousel = container.querySelector('.carousel');
	  const nextButton = container.querySelector('.next');
	  const prevButton = container.querySelector('.prev');
	  
	  // Obtener el ancho de desplazamiento desde un atributo 'data'
	  const cardWidth = parseInt(container.getAttribute('data-card-width') || '320'); 
	  const swipeThreshold = cardWidth * 0.25; // Umbral de deslizamiento (25% del ancho)
	  
	  let scrollAmount = 0;
	  let startX = 0;
	  let isDragging = false;
  
	  // Función para actualizar el estado de los botones
	  function updateButtons() {
		const maxScroll = carousel!.scrollWidth - carousel!.clientWidth;
		
		// Deshabilitar el botón "next" si llegamos al final
		if (scrollAmount >= maxScroll) {
		  nextButton?.setAttribute('disabled', 'true');
		} else {
		  nextButton?.removeAttribute('disabled');
		}
		
		// Deshabilitar el botón "prev" si estamos al inicio
		if (scrollAmount <= 0) {
		  prevButton?.setAttribute('disabled', 'true');
		} else {
		  prevButton?.removeAttribute('disabled');
		}
	  }
	  
	  // Llamamos a la función para actualizar los botones al cargar la página
	  updateButtons();
	  
	  // Evento para el botón de siguiente
	  nextButton?.addEventListener('click', () => {
		const maxScroll = carousel!.scrollWidth - carousel!.clientWidth;
		
		if (scrollAmount < maxScroll) {
		  scrollAmount += cardWidth;
		  carousel?.scrollTo({
			left: scrollAmount,
			behavior: 'smooth'
		  });
		  updateButtons(); // Actualizar los botones después de desplazarse
		}
	  });
	  
	  // Evento para el botón de anterior
	  prevButton?.addEventListener('click', () => {
		if (scrollAmount > 0) {
		  scrollAmount -= cardWidth;
		  carousel?.scrollTo({
			left: scrollAmount,
			behavior: 'smooth'
		  });
		  updateButtons(); // Actualizar los botones después de desplazarse
		}
	  });
	  
  	  // Manejo de movimiento táctil
	carousel?.addEventListener('touchstart', (e: any) => {
		startX = e.touches[0].clientX;
		isDragging = true;
  });
  
	carousel?.addEventListener('touchmove', (e: any) => {
		if (!isDragging) return;
  
	const moveX = e.touches[0].clientX;
	const diff = startX - moveX;
  
	if (Math.abs(diff) >= swipeThreshold) {
	  if (diff > 0) {
		scrollAmount += cardWidth;
	  } else {
		scrollAmount -= cardWidth;
	  }
  
	  carousel?.scrollTo({
		left: scrollAmount,
		behavior: 'smooth'
	  });
	  startX = moveX;
	  updateButtons();
	}
  });
	  carousel?.addEventListener('touchend', () => {
		isDragging = false;
	  });
	});
  </script>
  

  
  



  
